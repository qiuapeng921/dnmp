
user  nginx;
worker_processes  4;

pid        /var/run/nginx.pid;
error_log  /var/log/nginx/nginx.error.log warn;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
	
    log_format log_json '{ "@timestamp": "$time_local", '
						'"remote_addr": "$remote_addr", '
						'"referer": "$http_referer", '
						'"request": "$request", '
						'"status": $status, '
						'"bytes": $body_bytes_sent, '
						'"agent": "$http_user_agent", '
						'"x_forwarded": "$http_x_forwarded_for", '
						'"up_addr": "$upstream_addr",'
						'"up_host": "$upstream_http_host",'
						'"up_resp_time": "$upstream_response_time",'
						'"request_time": "$request_time"'
						' }';
	
    access_log /dev/null;
    #access_log  /var/log/dnmp/nginx.access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;
    client_max_body_size 10m;

    #开启gzip模式
    gzip on;
    #gizp压缩起点，文件大于25k才进行压缩
    gzip_min_length 25;
    #gzip 压缩级别为1-9，数字越大压缩的越好，也越占用CPU的资源，自己一般设置4-6范围
    gzip_comp_level 4;
    #进行压缩的文件类型
    gzip_types text/plain application/javascript text/css application/xml text/javascript application/json;
    #是否传输gzip压缩标志，就是在http header中添加Vary: Accept-Encoding，建议开启
    gzip_vary on;
    #设置gzip压缩针对的http协议版本，可以不设置，目前几乎都是1.1
    gzip_http_version 1.1;

    include /etc/nginx/conf.d/*.conf;
}
